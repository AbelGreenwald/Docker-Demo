{
    "AWSTemplateFormatVersion" : "2010-09-09",
    "Description" : "Demo Docker Stack",
    "Parameters" : {
        "NumInstances" : {
            "Description" : "Number of Instances",
            "Type" : "Number",
            "MinValue" : "0",
            "MaxValue" : "5"
        }
    },
    "Resources" : {
        "VPC" : {
            "Type" : "AWS::EC2::VPC",
            "Properties" : {
                "EnableDnsSupport" : "true",
                "EnableDnsHostnames" : "true",
                "CidrBlock" : "172.31.255.0/24"
            }
        },

        "DhcpOptions" : {
            "Type" : "AWS::EC2::DHCPOptions",
            "Properties" : {
                "DomainName" : "ec2.internal",
                "DomainNameServers" : [ "AmazonProvidedDNS" ]
            }
        },

        "VPCDHCPOptionsAssociation" : {
            "Type" : "AWS::EC2::VPCDHCPOptionsAssociation",
            "Properties" : {
                "VpcId" : { "Ref" : "VPC" },
                "DhcpOptionsId" : {"Ref" : "DhcpOptions"}
            }
        },

        "InternetGateway" : {
            "Type" : "AWS::EC2::InternetGateway"
        },

        "GatewayToInternet" : {
            "Type" : "AWS::EC2::VPCGatewayAttachment",
            "Properties" : {
                "VpcId" : { "Ref" : "VPC" },
                "InternetGatewayId" : { "Ref" : "InternetGateway" }
            }
        },

        "PublicSubnet" : {
            "Type" : "AWS::EC2::Subnet",
            "Properties" : {
                "AvailabilityZone" : "us-east-1e",
                "VpcId" : { "Ref" : "VPC" },
                "CidrBlock" : "172.31.255.0/28"
            }
        },

        "PrivateSubnet" : {
            "Type" : "AWS::EC2::Subnet",
            "Properties" : {
                "AvailabilityZone" : "us-east-1e",
                "VpcId" : { "Ref" : "VPC" },
                "CidrBlock" : "172.31.255.16/28"
            }
        },

        "PublicRouteTable" : {
            "Type" : "AWS::EC2::RouteTable",
            "Properties" : {
                "VpcId" : { "Ref" : "VPC" }
            }
        },

        "PrivateRouteTable" : {
            "Type" : "AWS::EC2::RouteTable",
            "Properties" : {
                "VpcId" : { "Ref" : "VPC" }
            }
        },

        "PublicRouteTableAssociation" : {
            "Type" : "AWS::EC2::SubnetRouteTableAssociation",
            "Properties" : {
                "SubnetId" : { "Ref" : "PublicSubnet" },
                "RouteTableId" : { "Ref" : "PublicRouteTable" }
            }
        },

        "PrivateRouteTableAssociation" : {
            "Type" : "AWS::EC2::SubnetRouteTableAssociation",
            "Properties" : {
                "SubnetId" : { "Ref" : "PrivateSubnet" },
                "RouteTableId" : { "Ref" : "PrivateRouteTable" }
            }
        },

        "PublicRoute" : {
            "Type" : "AWS::EC2::Route",
            "Properties" : {
                "RouteTableId" : { "Ref" : "PublicRouteTable" },
                "DestinationCidrBlock" : "0.0.0.0/0",
                "GatewayId" : { "Ref" : "InternetGateway" }
            }
        },

        "PrivateRoute" : {
            "Type" : "AWS::EC2::Route",
            "Properties" : {
                "RouteTableId" : { "Ref" : "PrivateRouteTable" },
                "DestinationCidrBlock" : "0.0.0.0/0",
                "NatGatewayId" : { "Ref" : "NAT" }
            }
        },

        "EIP" : {
            "Type" : "AWS::EC2::EIP",
            "Properties" : {
                "Domain" : "vpc"
            }
        },

        "NAT" : {
            "Type" : "AWS::EC2::NatGateway",
            "Properties" : {
            "AllocationId" : { "Fn::GetAtt" : ["EIP", "AllocationId"]},
                "SubnetId" : { "Ref" : "PublicSubnet"}
            }
        },

        "PublicNetworkAcl" : {
            "Type" : "AWS::EC2::NetworkAcl",
            "Properties" : {
                "VpcId" : { "Ref" : "VPC" }
            }
        },

        "PrivateNetworkAcl" : {
            "Type" : "AWS::EC2::NetworkAcl",
            "Properties" : {
                "VpcId" : { "Ref" : "VPC" }
            }
        },

        "PublicInboundNetworkAclEntry" : {
            "Type" : "AWS::EC2::NetworkAclEntry",
            "Properties" : {
                "NetworkAclId" : { "Ref" : "PublicNetworkAcl" },
                "RuleNumber" : "100",
                "Protocol" : "-1",
                "RuleAction" : "allow",
                "Egress" : "false",
                "CidrBlock" : "0.0.0.0/0"
            }
        },

        "PublicOutboundNetworkAclEntry" : {
            "Type" : "AWS::EC2::NetworkAclEntry",
            "Properties" : {
                "NetworkAclId" : { "Ref" : "PublicNetworkAcl" },
                "RuleNumber" : "100",
                "Protocol" : "-1",
                "RuleAction" : "allow",
                "Egress" : "true",
                "CidrBlock" : "0.0.0.0/0"
            }
        },

        "PrivateInboundNetworkAclEntry" : {
            "Type" : "AWS::EC2::NetworkAclEntry",
            "Properties" : {
                "NetworkAclId" : { "Ref" : "PrivateNetworkAcl" },
                "RuleNumber" : "100",
                "Protocol" : "-1",
                "RuleAction" : "allow",
                "Egress" : "false",
                "CidrBlock" : "0.0.0.0/0"
            }
        },

        "PrivateOutboundNetworkAclEntry" : {
            "Type" : "AWS::EC2::NetworkAclEntry",
            "Properties" : {
                "NetworkAclId" : { "Ref" : "PrivateNetworkAcl" },
                "RuleNumber" : "100",
                "Protocol" : "-1",
                "RuleAction" : "allow",
                "Egress" : "true",
                "CidrBlock" : "0.0.0.0/0"
            }
        },

        "PublicSubnetNetworkAclAssociation" : {
            "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
            "DependsOn" : "PublicNetworkAcl",
            "Properties" : {
                "SubnetId" : { "Ref" : "PublicSubnet" },
                "NetworkAclId" : { "Ref" : "PublicNetworkAcl" }
            }
        },

        "PrivateSubnetNetworkAclAssociation" : {
            "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
            "DependsOn" : "PublicNetworkAcl",
            "Properties" : {
                "SubnetId" : { "Ref" : "PrivateSubnet" },
                "NetworkAclId" : { "Ref" : "PrivateNetworkAcl" }
            }
        },

        "ASG" : {
            "Type" : "AWS::AutoScaling::AutoScalingGroup",
            "Properties" : {
                "VPCZoneIdentifier" : [ { "Ref" : "PrivateSubnet" } ],
                "LaunchConfigurationName" : { "Ref" : "LaunchConfig" },
                "MinSize" : "0",
                "MaxSize" : "5",
                "DesiredCapacity" : { "Ref" : "NumInstances" }
            },
            "CreationPolicy" : {
                "ResourceSignal" : {
                    "Timeout" : "PT15M",
                    "Count" : "1"
                }
            },
            "UpdatePolicy": {
                "AutoScalingRollingUpdate": {
                    "MinInstancesInService": "1",
                    "MaxBatchSize": "1",
                    "PauseTime" : "PT15M",
                    "WaitOnResourceSignals": "true"
                }
            }
        },

        "LaunchConfig": {
            "Type" : "AWS::AutoScaling::LaunchConfiguration",
            "Metadata" : {
                "AWS::CloudFormation::Init" : {
                    "configSets" : {
                        "RunDocker" : [ "Configure", "Bootstrap" ]
                    },
                    "Configure" : {
                        "packages" : {
                            "yum" : {
                                "docker" : []
                            }
                        },
                        "services" : {
                            "sysvinit" : {
                                "docker" : {
                                    "enabled" : "true",
                                    "ensureRunning" : "true",
                                    "ignoreErrors" : "false"
                                }
                            }
                        }
                    },
                    "Bootstrap" : {
                        "commands" : {
                            "StartDocker" : {
                                "command" : "docker run hello-world",
                                "ignoreErrors" : "true"
                            }
                        }
                    }
                }
            },
            "DependsOn" : "NAT",
            "Properties": {
                "ImageId" : "ami-55ef662f",
                "InstanceType"   : "t2.small",
                "KeyName" : "Keys",
                "SecurityGroups" : [ {"Ref" : "SecurityGroup"} ],
                "UserData" : { "Fn::Base64" : { "Fn::Join" : ["", [
                    "#!/bin/bash -xe\n",
                    "yum clean all\n",
                    "yum -y update\n",
                    "/opt/aws/bin/cfn-init -v ",
                    "         --stack ", { "Ref" : "AWS::StackName" },
                    "         --resource LaunchConfig ",
                    "         --configsets RunDocker ",
                    "         --region ", { "Ref" : "AWS::Region" }, "\n",

                    "/opt/aws/bin/cfn-signal -e $? ",
                    "         --stack ", { "Ref" : "AWS::StackName" },
                    "         --resource ASG ",
                    "         --region ", { "Ref" : "AWS::Region" }, "\n"
                ]]}}
            }
        },

        "SecurityGroup" : {
            "Type" : "AWS::EC2::SecurityGroup",
            "Properties" : {
                "GroupDescription" : "Very Restrictive Security Group",
                "VpcId" : { "Ref" : "VPC" }
            }
        }
    },

    "Outputs" : {
        "NatEIP": {
            "Description": "The Elastive IP address assigned to the NAT Gateway",
            "Value": { "Ref": "EIP" }
        }
    }
}